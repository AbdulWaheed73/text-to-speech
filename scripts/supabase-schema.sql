-- Supabase Database Schema for DALL·E Image Generation Pipeline
--
-- This SQL file contains the schema for storing DALL·E generated images
-- Run this in your Supabase SQL Editor to set up the database

-- Create the generated_images table
CREATE TABLE IF NOT EXISTS public.generated_images (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  keyword VARCHAR(100),
  original_prompt TEXT NOT NULL,
  revised_prompt TEXT,
  image_url TEXT NOT NULL,
  storage_path TEXT NOT NULL,
  model VARCHAR(50) DEFAULT 'dall-e-3',
  size VARCHAR(20) DEFAULT '1024x1024',
  quality VARCHAR(20) DEFAULT 'hd',
  style VARCHAR(20) DEFAULT 'natural',
  status VARCHAR(20) DEFAULT 'completed',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create an index on created_at for faster queries
CREATE INDEX IF NOT EXISTS idx_generated_images_created_at
ON public.generated_images(created_at DESC);

-- Create an index on status for filtering
CREATE INDEX IF NOT EXISTS idx_generated_images_status
ON public.generated_images(status);

-- Create an index on keyword for faster searching
CREATE INDEX IF NOT EXISTS idx_generated_images_keyword
ON public.generated_images(keyword);

-- Create a function to update the updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create a trigger to automatically update the updated_at column
CREATE TRIGGER update_generated_images_updated_at
BEFORE UPDATE ON public.generated_images
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Disable Row Level Security (RLS) for unrestricted access
-- WARNING: This allows anyone to read/write to this table
-- Enable RLS and create policies when you need security
ALTER TABLE public.generated_images DISABLE ROW LEVEL SECURITY;

-- ============================================================
-- STORAGE POLICIES FOR DALL·E IMAGES BUCKET
-- ============================================================
-- These policies allow anonymous users to upload/read from the dall-e-images bucket

-- Allow INSERT (upload) for anon users to dall-e-images bucket
CREATE POLICY "Allow anon insert to dall-e-images"
ON storage.objects
FOR INSERT
TO anon
WITH CHECK (bucket_id = 'dall-e-images');

-- Allow SELECT (read) for anon users to dall-e-images bucket
CREATE POLICY "Allow anon select from dall-e-images"
ON storage.objects
FOR SELECT
TO anon
USING (bucket_id = 'dall-e-images');

-- Allow UPDATE for anon users to dall-e-images bucket
CREATE POLICY "Allow anon update to dall-e-images"
ON storage.objects
FOR UPDATE
TO anon
USING (bucket_id = 'dall-e-images')
WITH CHECK (bucket_id = 'dall-e-images');

-- Allow DELETE for anon users to dall-e-images bucket
CREATE POLICY "Allow anon delete from dall-e-images"
ON storage.objects
FOR DELETE
TO anon
USING (bucket_id = 'dall-e-images');

-- Comments for documentation
COMMENT ON TABLE public.generated_images IS 'Stores metadata for images generated by DALL·E and uploaded to Supabase Storage';
COMMENT ON COLUMN public.generated_images.id IS 'Unique identifier for each generated image';
COMMENT ON COLUMN public.generated_images.keyword IS 'Keyword/tag associated with the image for categorization and search';
COMMENT ON COLUMN public.generated_images.original_prompt IS 'The original prompt provided by the user';
COMMENT ON COLUMN public.generated_images.revised_prompt IS 'The revised/optimized prompt generated by DALL·E';
COMMENT ON COLUMN public.generated_images.image_url IS 'Public URL of the image in Supabase Storage';
COMMENT ON COLUMN public.generated_images.storage_path IS 'File path in Supabase Storage bucket';
COMMENT ON COLUMN public.generated_images.model IS 'DALL·E model used (e.g., dall-e-3, dall-e-2)';
COMMENT ON COLUMN public.generated_images.size IS 'Image dimensions (e.g., 1024x1024)';
COMMENT ON COLUMN public.generated_images.quality IS 'Image quality setting (standard, hd)';
COMMENT ON COLUMN public.generated_images.style IS 'Image style (natural, vivid)';
COMMENT ON COLUMN public.generated_images.status IS 'Generation status (completed, failed, pending)';
COMMENT ON COLUMN public.generated_images.created_at IS 'Timestamp when the record was created';
COMMENT ON COLUMN public.generated_images.updated_at IS 'Timestamp when the record was last updated';
